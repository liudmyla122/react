{"ast":null,"code":"var _jsxFileName = \"/Users/aminabahteeva/Documents/Ucheba Visual code/REAKT/HW/HW-13/my-redux-app/src/components/User/UserProfile.js\",\n  _s = $RefreshSig$();\n// src/components/UserList/UserList.js\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAllUsers, selectSelectedLetter, selectUsersByLetter, setSelectedLetter } from '../../store/slices/usersSlice';\nimport './UserList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const allUsers = useSelector(selectAllUsers);\n  const selectedLetter = useSelector(selectSelectedLetter);\n  const filteredUsers = useSelector(selectUsersByLetter);\n\n  // Получаем уникальные буквы из всех пользователей\n  const letters = [...new Set(allUsers.map(user => user.letter))].sort();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"user-list-title\",\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-letter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-letter\",\n        children: selectedLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-divider\",\n        children: \"---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-section\",\n      children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-item\",\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letters-panel\",\n      children: letters.map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `letter-button ${selectedLetter === letter ? 'active' : ''}`,\n        onClick: () => dispatch(setSelectedLetter(letter)),\n        children: letter\n      }, letter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"uM1Q6HaDUoqphQ9VweTm1k0n4iU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useSelector","useDispatch","selectAllUsers","selectSelectedLetter","selectUsersByLetter","setSelectedLetter","jsxDEV","_jsxDEV","UserList","_s","dispatch","allUsers","selectedLetter","filteredUsers","letters","Set","map","user","letter","sort","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onClick","_c","$RefreshReg$"],"sources":["/Users/aminabahteeva/Documents/Ucheba Visual code/REAKT/HW/HW-13/my-redux-app/src/components/User/UserProfile.js"],"sourcesContent":["// src/components/UserList/UserList.js\nimport React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  selectAllUsers,\n  selectSelectedLetter,\n  selectUsersByLetter,\n  setSelectedLetter,\n} from '../../store/slices/usersSlice'\nimport './UserList.css'\n\nconst UserList = () => {\n  const dispatch = useDispatch()\n  const allUsers = useSelector(selectAllUsers)\n  const selectedLetter = useSelector(selectSelectedLetter)\n  const filteredUsers = useSelector(selectUsersByLetter)\n\n  // Получаем уникальные буквы из всех пользователей\n  const letters = [...new Set(allUsers.map((user) => user.letter))].sort()\n\n  return (\n    <div className=\"user-list-container\">\n      <h1 className=\"user-list-title\">User List</h1>\n\n      {/* Блок с выбранной буквой */}\n      <div className=\"selected-letter-section\">\n        <div className=\"selected-letter\">{selectedLetter}</div>\n        <div className=\"letter-divider\">---</div>\n      </div>\n\n      {/* Список пользователей */}\n      <div className=\"users-section\">\n        {filteredUsers.map((user) => (\n          <div key={user.id} className=\"user-item\">\n            {user.name}\n          </div>\n        ))}\n      </div>\n\n      {/* Панель выбора букв */}\n      <div className=\"letters-panel\">\n        {letters.map((letter) => (\n          <button\n            key={letter}\n            className={`letter-button ${\n              selectedLetter === letter ? 'active' : ''\n            }`}\n            onClick={() => dispatch(setSelectedLetter(letter))}\n          >\n            {letter}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default UserList\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,cAAc,EACdC,oBAAoB,EACpBC,mBAAmB,EACnBC,iBAAiB,QACZ,+BAA+B;AACtC,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGX,WAAW,CAACE,cAAc,CAAC;EAC5C,MAAMU,cAAc,GAAGZ,WAAW,CAACG,oBAAoB,CAAC;EACxD,MAAMU,aAAa,GAAGb,WAAW,CAACI,mBAAmB,CAAC;;EAEtD;EACA,MAAMU,OAAO,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACJ,QAAQ,CAACK,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAExE,oBACEZ,OAAA;IAAKa,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCd,OAAA;MAAIa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG9ClB,OAAA;MAAKa,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCd,OAAA;QAAKa,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAET;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDlB,OAAA;QAAKa,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAGNlB,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BR,aAAa,CAACG,GAAG,CAAEC,IAAI,iBACtBV,OAAA;QAAmBa,SAAS,EAAC,WAAW;QAAAC,QAAA,EACrCJ,IAAI,CAACS;MAAI,GADFT,IAAI,CAACU,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNlB,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BP,OAAO,CAACE,GAAG,CAAEE,MAAM,iBAClBX,OAAA;QAEEa,SAAS,EAAE,iBACTR,cAAc,KAAKM,MAAM,GAAG,QAAQ,GAAG,EAAE,EACxC;QACHU,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACL,iBAAiB,CAACa,MAAM,CAAC,CAAE;QAAAG,QAAA,EAElDH;MAAM,GANFA,MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOL,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAhB,EAAA,CA5CKD,QAAQ;EAAA,QACKP,WAAW,EACXD,WAAW,EACLA,WAAW,EACZA,WAAW;AAAA;AAAA6B,EAAA,GAJ7BrB,QAAQ;AA8Cd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}